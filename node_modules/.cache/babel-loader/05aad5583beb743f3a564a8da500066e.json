{"ast":null,"code":"var _jsxFileName = \"/Users/lee/DictReactJS_DYLEE/dict-app/src/contexts/WordContext.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nexport const WordContext = createContext();\n\nconst WordContextProvider = props => {\n  const localData = localStorage.getItem(\"vocab\");\n  const [todayVocab, setTodayVocab] = useState([{\n    word: \"a\",\n    definition: \"abc\",\n    id: uuidv1()\n  }]);\n  const [vocab, setVocab] = useState(JSON.parse(localData));\n  useEffect(() => {\n    localStorage.setItem(\"vocab\", JSON.stringify(vocab));\n  }, [vocab]);\n\n  const addWord = (word, definition) => {\n    if (word) {\n      setVocab([...vocab, {\n        word,\n        definition,\n        id: uuidv1()\n      }]);\n    }\n  };\n\n  const removeWord = id => {\n    setVocab(vocab.filter(word => word.id !== id));\n  };\n\n  return /*#__PURE__*/React.createElement(WordContext.Provider, {\n    value: {\n      todayVocab,\n      vocab,\n      addWord,\n      removeWord\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default WordContextProvider;","map":{"version":3,"sources":["/Users/lee/DictReactJS_DYLEE/dict-app/src/contexts/WordContext.js"],"names":["React","createContext","useState","useEffect","v1","uuidv1","WordContext","WordContextProvider","props","localData","localStorage","getItem","todayVocab","setTodayVocab","word","definition","id","vocab","setVocab","JSON","parse","setItem","stringify","addWord","removeWord","filter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEP,MAAMM,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAC3C;AAAEY,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,UAAU,EAAE,KAAzB;AAAgCC,IAAAA,EAAE,EAAEX,MAAM;AAA1C,GAD2C,CAAD,CAA5C;AAGA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACiB,IAAI,CAACC,KAAL,CAAWX,SAAX,CAAD,CAAlC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,SAAL,CAAeL,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMM,OAAO,GAAG,CAACT,IAAD,EAAOC,UAAP,KAAsB;AACpC,QAAID,IAAJ,EAAU;AACRI,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEH,QAAAA,IAAF;AAAQC,QAAAA,UAAR;AAAoBC,QAAAA,EAAE,EAAEX,MAAM;AAA9B,OAAX,CAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMmB,UAAU,GAAGR,EAAE,IAAI;AACvBE,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaX,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,UAAF;AAAcK,MAAAA,KAAd;AAAqBM,MAAAA,OAArB;AAA8BC,MAAAA;AAA9B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACkB,QADT,CADF;AAKD,CA1BD;;AA4BA,eAAenB,mBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\n\nexport const WordContext = createContext();\n\nconst WordContextProvider = props => {\n  const localData = localStorage.getItem(\"vocab\");\n  const [todayVocab, setTodayVocab] = useState([\n    { word: \"a\", definition: \"abc\", id: uuidv1() }\n  ]);\n  const [vocab, setVocab] = useState(JSON.parse(localData));\n\n  useEffect(() => {\n    localStorage.setItem(\"vocab\", JSON.stringify(vocab));\n  }, [vocab]);\n\n  const addWord = (word, definition) => {\n    if (word) {\n      setVocab([...vocab, { word, definition, id: uuidv1() }]);\n    }\n  };\n\n  const removeWord = id => {\n    setVocab(vocab.filter(word => word.id !== id));\n  };\n\n  return (\n    <WordContext.Provider value={{ todayVocab, vocab, addWord, removeWord }}>\n      {props.children}\n    </WordContext.Provider>\n  );\n};\n\nexport default WordContextProvider;\n"]},"metadata":{},"sourceType":"module"}